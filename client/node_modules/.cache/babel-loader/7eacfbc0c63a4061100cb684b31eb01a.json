{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/tabobserver\n */\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Tab observer introduces the {@link module:engine/view/document~Document#event:tab `Document#tab`} event.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nexport default class TabObserver extends Observer {\n  /**\n   * @inheritDoc\n   */\n  constructor(view) {\n    super(view);\n    const doc = this.document;\n    doc.on('keydown', (evt, data) => {\n      if (!this.isEnabled || data.keyCode != keyCodes.tab || data.ctrlKey) {\n        return;\n      }\n\n      const event = new BubblingEventInfo(doc, 'tab', doc.selection.getFirstRange());\n      doc.fire(event, data);\n\n      if (event.stop.called) {\n        evt.stop();\n      }\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  observe() {}\n\n}\n/**\n * Event fired when the user presses a tab key.\n *\n * Introduced by {@link module:engine/view/observer/tabobserver~TabObserver}.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @event module:engine/view/document~Document#event:tab\n *\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/reddit-clone/client/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/tabobserver.js"],"names":["Observer","BubblingEventInfo","keyCodes","TabObserver","constructor","view","doc","document","on","evt","data","isEnabled","keyCode","tab","ctrlKey","event","selection","getFirstRange","fire","stop","called","observe"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,QAAT,QAAyB,wCAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BH,QAA1B,CAAmC;AACjD;AACD;AACA;AACCI,EAAAA,WAAW,CAAEC,IAAF,EAAS;AACnB,UAAOA,IAAP;AAEA,UAAMC,GAAG,GAAG,KAAKC,QAAjB;AAEAD,IAAAA,GAAG,CAACE,EAAJ,CAAQ,SAAR,EAAmB,CAAEC,GAAF,EAAOC,IAAP,KAAiB;AACnC,UACC,CAAC,KAAKC,SAAN,IACAD,IAAI,CAACE,OAAL,IAAgBV,QAAQ,CAACW,GADzB,IAEAH,IAAI,CAACI,OAHN,EAIE;AACD;AACA;;AAED,YAAMC,KAAK,GAAG,IAAId,iBAAJ,CAAuBK,GAAvB,EAA4B,KAA5B,EAAmCA,GAAG,CAACU,SAAJ,CAAcC,aAAd,EAAnC,CAAd;AAEAX,MAAAA,GAAG,CAACY,IAAJ,CAAUH,KAAV,EAAiBL,IAAjB;;AAEA,UAAKK,KAAK,CAACI,IAAN,CAAWC,MAAhB,EAAyB;AACxBX,QAAAA,GAAG,CAACU,IAAJ;AACA;AACD,KAhBD;AAiBA;AAED;AACD;AACA;;;AACCE,EAAAA,OAAO,GAAG,CAAE;;AA/BqC;AAkClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/tabobserver\n */\n\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Tab observer introduces the {@link module:engine/view/document~Document#event:tab `Document#tab`} event.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class TabObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst doc = this.document;\n\n\t\tdoc.on( 'keydown', ( evt, data ) => {\n\t\t\tif (\n\t\t\t\t!this.isEnabled ||\n\t\t\t\tdata.keyCode != keyCodes.tab ||\n\t\t\t\tdata.ctrlKey\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst event = new BubblingEventInfo( doc, 'tab', doc.selection.getFirstRange() );\n\n\t\t\tdoc.fire( event, data );\n\n\t\t\tif ( event.stop.called ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user presses a tab key.\n *\n * Introduced by {@link module:engine/view/observer/tabobserver~TabObserver}.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @event module:engine/view/document~Document#event:tab\n *\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n"]},"metadata":{},"sourceType":"module"}